buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "io.ratpack:ratpack-gradle:1.6.0"
        classpath 'com.h2database:h2:1.4.198'   // <1>
        classpath 'org.jooq:jooq-codegen:3.8.1' // <2>
    }
}

apply plugin: "io.ratpack.ratpack-java"
apply plugin: "idea"

group 'biz.ltsweb.tutorial'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    jcenter()
    mavenCentral()
}

dependencies {

    compile 'org.codehaus.groovy:groovy-all:2.3.11'
    compile ratpack.dependency('thymeleaf')
    compile ratpack.dependency('hikari')
    compile 'com.h2database:h2:1.4.198'
    compile 'org.jooq:jooq:3.8.1'


    runtime "org.slf4j:slf4j-simple:1.7.25"
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

mainClassName = "biz.letsweb.tutorial.RatpackApp"

import org.jooq.util.jaxb.*
import org.jooq.util.*

// tag::jooq[]
task jooqCodegen {
    doLast {
        String init = "$projectDir/src/main/resources/init.sql".replaceAll('\\\\', '/')
        Configuration configuration = new Configuration()
                .withJdbc(new Jdbc()
                .withDriver("org.h2.Driver") // <2>
                .withUrl("jdbc:h2:mem:todo;INIT=RUNSCRIPT FROM '$init'") // <3>
        )
                .withGenerator(new Generator()
                .withDatabase(new Database()
                .withName("org.jooq.util.h2.H2Database")
                .withIncludes(".*")
                .withExcludes("")
                .withInputSchema("PUBLIC")
        )
                .withTarget(new Target()
                .withDirectory("$projectDir/src/main/java") // <4>
                .withPackageName("jooq"))) // <5>
        GenerationTool.generate(configuration)
    }
}